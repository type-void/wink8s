---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana
  #namespace: kibana
  namespace: kube-system
  labels:
    app: kibana
data:
  kibana.yml: |-
    ---
    # Default Kibana configuration from kibana-docker.
    server.name: kibana
    server.host: "0"
    ##elasticsearch.url: ${ELASTICSEARCH_URL} # SDS PaaS 2020-01-06 - removed in kibana 7
    elasticsearch.hosts: ${ELASTICSEARCH_HOSTS}
    elasticsearch.ssl.verificationMode: none
    elasticsearch.requestTimeout: 360000
    elasticsearch.username: "kibanaserver"
    elasticsearch.password: "krDbaA3A6eI7P0YmNk"

    # Kibana TLS Config
    ##server.ssl.enabled: true
    server.ssl.enabled: false
    ##server.ssl.key: /usr/share/kibana/config/kibana-key.pem
    ##server.ssl.certificate: /usr/share/kibana/config/kibana-crt.pem
    ##server.ssl.keyPassphrase: ${KEY_PASSPHRASE}
    ##elasticsearch.ssl.certificateAuthorities: /usr/share/kibana/config/kibana-root-ca.pem
    ##opendistro_security.cookie.secure: true
    opendistro_security.cookie.secure: false
    ##opendistro_security.cookie.password: ${COOKIE_PASS}

    opendistro_security.auth.type: "basicauth"
    #### SDS PaaS - optional - OIDC
    #opendistro_security.auth.type: "openid"
    #opendistro_security.openid.connect_url: "https://cloudportal.samsungsds.com/accounts/oidc/.well-known/openid-configuration"
    #opendistro_security.openid.client_id: "paasdev"
    #opendistro_security.openid.client_secret: "P@ssw0rd"
    #opendistro_security.openid.scope: "openid email groups"
    #opendistro_security.openid.header: "Authorization"
    #opendistro_security.openid.base_redirect_url: "http://kibana.paasdev.sdspaas.io"
    #elasticsearch.requestHeadersWhitelist: ["Authorization", "security_tenant", "securitytenant"] 


