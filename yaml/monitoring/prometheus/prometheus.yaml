apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: prometheus
  name: prometheus
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: prometheus
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: prometheus
        kubernetes.io/cluster-service: "true"
        addonmanager.kubernetes.io/mode: Reconcile
        version: v2.15.2
    spec:
      priorityClassName: system-cluster-critical
      serviceAccountName: prometheus
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - name: promtheus-server
          image: prom/prometheus:v2.15.2
          imagePullPolicy: IfNotPresent
          args:
            - --config.file=/etc/config/prometheus.yaml
            - --storage.tsdb.path=/data
            - --storage.tsdb.retention.time=15d
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: prometheus-volume
              mountPath: /data
            - name: prometheus-rules
              mountPath: /etc/config/rules
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-cm
        - name: prometheus-volume
          emptyDir: {}
        - name: prometheus-rules
          configMap:
            name: prometheus-rules-cm

